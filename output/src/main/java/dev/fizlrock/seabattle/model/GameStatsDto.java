/*
 * Seabattle API
 * Сервис для игры в морской бой
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: nirku0soft@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.fizlrock.seabattle.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * GameStatsDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class GameStatsDto {
  public static final String SERIALIZED_NAME_GAME_NUMBER = "game_number";
  @SerializedName(SERIALIZED_NAME_GAME_NUMBER)
  @javax.annotation.Nullable
  private Integer gameNumber;

  public static final String SERIALIZED_NAME_OPPONENT_NAME = "opponent_name";
  @SerializedName(SERIALIZED_NAME_OPPONENT_NAME)
  @javax.annotation.Nullable
  private String opponentName;

  public static final String SERIALIZED_NAME_SHOTS_FIRED = "shots_fired";
  @SerializedName(SERIALIZED_NAME_SHOTS_FIRED)
  @javax.annotation.Nullable
  private Integer shotsFired;

  public static final String SERIALIZED_NAME_HIT_PERCENTAGE = "hit_percentage";
  @SerializedName(SERIALIZED_NAME_HIT_PERCENTAGE)
  @javax.annotation.Nullable
  private Integer hitPercentage;

  public static final String SERIALIZED_NAME_MATCH_DURATION = "match_duration";
  @SerializedName(SERIALIZED_NAME_MATCH_DURATION)
  @javax.annotation.Nullable
  private Integer matchDuration;

  public GameStatsDto() {
  }

  public GameStatsDto gameNumber(@javax.annotation.Nullable Integer gameNumber) {
    
    this.gameNumber = gameNumber;
    return this;
  }

  /**
   * Порядковый номер игры
   * minimum: 0
   * @return gameNumber
   */
  @javax.annotation.Nullable

  public Integer getGameNumber() {
    return gameNumber;
  }


  public void setGameNumber(@javax.annotation.Nullable Integer gameNumber) {
    this.gameNumber = gameNumber;
  }

  public GameStatsDto opponentName(@javax.annotation.Nullable String opponentName) {
    
    this.opponentName = opponentName;
    return this;
  }

  /**
   * Имя противника
   * @return opponentName
   */
  @javax.annotation.Nullable

  public String getOpponentName() {
    return opponentName;
  }


  public void setOpponentName(@javax.annotation.Nullable String opponentName) {
    this.opponentName = opponentName;
  }

  public GameStatsDto shotsFired(@javax.annotation.Nullable Integer shotsFired) {
    
    this.shotsFired = shotsFired;
    return this;
  }

  /**
   * Количество выстрелов
   * minimum: 0
   * @return shotsFired
   */
  @javax.annotation.Nullable

  public Integer getShotsFired() {
    return shotsFired;
  }


  public void setShotsFired(@javax.annotation.Nullable Integer shotsFired) {
    this.shotsFired = shotsFired;
  }

  public GameStatsDto hitPercentage(@javax.annotation.Nullable Integer hitPercentage) {
    
    this.hitPercentage = hitPercentage;
    return this;
  }

  /**
   * Процент попаданий
   * minimum: 0
   * maximum: 100
   * @return hitPercentage
   */
  @javax.annotation.Nullable

  public Integer getHitPercentage() {
    return hitPercentage;
  }


  public void setHitPercentage(@javax.annotation.Nullable Integer hitPercentage) {
    this.hitPercentage = hitPercentage;
  }

  public GameStatsDto matchDuration(@javax.annotation.Nullable Integer matchDuration) {
    
    this.matchDuration = matchDuration;
    return this;
  }

  /**
   * Длительность поединка в миллисекундах
   * minimum: 0
   * @return matchDuration
   */
  @javax.annotation.Nullable

  public Integer getMatchDuration() {
    return matchDuration;
  }


  public void setMatchDuration(@javax.annotation.Nullable Integer matchDuration) {
    this.matchDuration = matchDuration;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameStatsDto gameStatsDto = (GameStatsDto) o;
    return Objects.equals(this.gameNumber, gameStatsDto.gameNumber) &&
        Objects.equals(this.opponentName, gameStatsDto.opponentName) &&
        Objects.equals(this.shotsFired, gameStatsDto.shotsFired) &&
        Objects.equals(this.hitPercentage, gameStatsDto.hitPercentage) &&
        Objects.equals(this.matchDuration, gameStatsDto.matchDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gameNumber, opponentName, shotsFired, hitPercentage, matchDuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameStatsDto {\n");
    sb.append("    gameNumber: ").append(toIndentedString(gameNumber)).append("\n");
    sb.append("    opponentName: ").append(toIndentedString(opponentName)).append("\n");
    sb.append("    shotsFired: ").append(toIndentedString(shotsFired)).append("\n");
    sb.append("    hitPercentage: ").append(toIndentedString(hitPercentage)).append("\n");
    sb.append("    matchDuration: ").append(toIndentedString(matchDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private GameStatsDto instance;

    public Builder() {
      this(new GameStatsDto());
    }

    protected Builder(GameStatsDto instance) {
      this.instance = instance;
    }

    public GameStatsDto.Builder gameNumber(Integer gameNumber) {
      this.instance.gameNumber = gameNumber;
      return this;
    }
    public GameStatsDto.Builder opponentName(String opponentName) {
      this.instance.opponentName = opponentName;
      return this;
    }
    public GameStatsDto.Builder shotsFired(Integer shotsFired) {
      this.instance.shotsFired = shotsFired;
      return this;
    }
    public GameStatsDto.Builder hitPercentage(Integer hitPercentage) {
      this.instance.hitPercentage = hitPercentage;
      return this;
    }
    public GameStatsDto.Builder matchDuration(Integer matchDuration) {
      this.instance.matchDuration = matchDuration;
      return this;
    }


    /**
    * returns a built GameStatsDto instance.
    *
    * The builder is not reusable.
    */
    public GameStatsDto build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static GameStatsDto.Builder builder() {
    return new GameStatsDto.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public GameStatsDto.Builder toBuilder() {
    return new GameStatsDto.Builder()
      .gameNumber(getGameNumber())
      .opponentName(getOpponentName())
      .shotsFired(getShotsFired())
      .hitPercentage(getHitPercentage())
      .matchDuration(getMatchDuration());
  }


}

