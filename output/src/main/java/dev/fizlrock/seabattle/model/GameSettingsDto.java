/*
 * Seabattle API
 * Сервис для игры в морской бой
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: nirku0soft@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.fizlrock.seabattle.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import dev.fizlrock.seabattle.model.BoatTypeDto;
import dev.fizlrock.seabattle.model.GameMapSettingsDto;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * Описание правил игры в морской бой
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class GameSettingsDto {
  public static final String SERIALIZED_NAME_BOAT_TYPES_DTO = "boat_types_dto";
  @SerializedName(SERIALIZED_NAME_BOAT_TYPES_DTO)
  @javax.annotation.Nonnull
  private List<BoatTypeDto> boatTypesDto = new ArrayList<>();

  public static final String SERIALIZED_NAME_GAME_MAP_SETTINGS_DTO = "game_map_settings_dto";
  @SerializedName(SERIALIZED_NAME_GAME_MAP_SETTINGS_DTO)
  @javax.annotation.Nonnull
  private GameMapSettingsDto gameMapSettingsDto;

  public GameSettingsDto() {
  }

  public GameSettingsDto boatTypesDto(@javax.annotation.Nonnull List<BoatTypeDto> boatTypesDto) {
    
    this.boatTypesDto = boatTypesDto;
    return this;
  }

  public GameSettingsDto addBoatTypesDtoItem(BoatTypeDto boatTypesDtoItem) {
    if (this.boatTypesDto == null) {
      this.boatTypesDto = new ArrayList<>();
    }
    this.boatTypesDto.add(boatTypesDtoItem);
    return this;
  }

  /**
   * Список допустимых видов кораблей
   * @return boatTypesDto
   */
  @javax.annotation.Nonnull

  public List<BoatTypeDto> getBoatTypesDto() {
    return boatTypesDto;
  }


  public void setBoatTypesDto(@javax.annotation.Nonnull List<BoatTypeDto> boatTypesDto) {
    this.boatTypesDto = boatTypesDto;
  }

  public GameSettingsDto gameMapSettingsDto(@javax.annotation.Nonnull GameMapSettingsDto gameMapSettingsDto) {
    
    this.gameMapSettingsDto = gameMapSettingsDto;
    return this;
  }

  /**
   * Get gameMapSettingsDto
   * @return gameMapSettingsDto
   */
  @javax.annotation.Nonnull

  public GameMapSettingsDto getGameMapSettingsDto() {
    return gameMapSettingsDto;
  }


  public void setGameMapSettingsDto(@javax.annotation.Nonnull GameMapSettingsDto gameMapSettingsDto) {
    this.gameMapSettingsDto = gameMapSettingsDto;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameSettingsDto gameSettingsDto = (GameSettingsDto) o;
    return Objects.equals(this.boatTypesDto, gameSettingsDto.boatTypesDto) &&
        Objects.equals(this.gameMapSettingsDto, gameSettingsDto.gameMapSettingsDto);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boatTypesDto, gameMapSettingsDto);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameSettingsDto {\n");
    sb.append("    boatTypesDto: ").append(toIndentedString(boatTypesDto)).append("\n");
    sb.append("    gameMapSettingsDto: ").append(toIndentedString(gameMapSettingsDto)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private GameSettingsDto instance;

    public Builder() {
      this(new GameSettingsDto());
    }

    protected Builder(GameSettingsDto instance) {
      this.instance = instance;
    }

    public GameSettingsDto.Builder boatTypesDto(List<BoatTypeDto> boatTypesDto) {
      this.instance.boatTypesDto = boatTypesDto;
      return this;
    }
    public GameSettingsDto.Builder gameMapSettingsDto(GameMapSettingsDto gameMapSettingsDto) {
      this.instance.gameMapSettingsDto = gameMapSettingsDto;
      return this;
    }


    /**
    * returns a built GameSettingsDto instance.
    *
    * The builder is not reusable.
    */
    public GameSettingsDto build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static GameSettingsDto.Builder builder() {
    return new GameSettingsDto.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public GameSettingsDto.Builder toBuilder() {
    return new GameSettingsDto.Builder()
      .boatTypesDto(getBoatTypesDto())
      .gameMapSettingsDto(getGameMapSettingsDto());
  }


}

