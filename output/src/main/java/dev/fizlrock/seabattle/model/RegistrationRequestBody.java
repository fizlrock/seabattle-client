/*
 * Seabattle API
 * Сервис для игры в морской бой
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: nirku0soft@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.fizlrock.seabattle.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Данные для аутентификации
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class RegistrationRequestBody {
  public static final String SERIALIZED_NAME_LOGIN = "login";
  @SerializedName(SERIALIZED_NAME_LOGIN)
  @javax.annotation.Nullable
  private String login;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  @javax.annotation.Nullable
  private String password;

  public RegistrationRequestBody() {
  }

  public RegistrationRequestBody login(@javax.annotation.Nullable String login) {
    
    this.login = login;
    return this;
  }

  /**
   * Get login
   * @return login
   */
  @javax.annotation.Nullable

  public String getLogin() {
    return login;
  }


  public void setLogin(@javax.annotation.Nullable String login) {
    this.login = login;
  }

  public RegistrationRequestBody password(@javax.annotation.Nullable String password) {
    
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable

  public String getPassword() {
    return password;
  }


  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = password;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegistrationRequestBody registrationRequestBody = (RegistrationRequestBody) o;
    return Objects.equals(this.login, registrationRequestBody.login) &&
        Objects.equals(this.password, registrationRequestBody.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(login, password);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegistrationRequestBody {\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private RegistrationRequestBody instance;

    public Builder() {
      this(new RegistrationRequestBody());
    }

    protected Builder(RegistrationRequestBody instance) {
      this.instance = instance;
    }

    public RegistrationRequestBody.Builder login(String login) {
      this.instance.login = login;
      return this;
    }
    public RegistrationRequestBody.Builder password(String password) {
      this.instance.password = password;
      return this;
    }


    /**
    * returns a built RegistrationRequestBody instance.
    *
    * The builder is not reusable.
    */
    public RegistrationRequestBody build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static RegistrationRequestBody.Builder builder() {
    return new RegistrationRequestBody.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public RegistrationRequestBody.Builder toBuilder() {
    return new RegistrationRequestBody.Builder()
      .login(getLogin())
      .password(getPassword());
  }


}

