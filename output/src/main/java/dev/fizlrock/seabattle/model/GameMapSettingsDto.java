/*
 * Seabattle API
 * Сервис для игры в морской бой
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: nirku0soft@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.fizlrock.seabattle.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Описание свойств игрового поля
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class GameMapSettingsDto {
  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  @javax.annotation.Nonnull
  private Integer width;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  @javax.annotation.Nonnull
  private Integer height;

  public GameMapSettingsDto() {
  }

  public GameMapSettingsDto width(@javax.annotation.Nonnull Integer width) {
    
    this.width = width;
    return this;
  }

  /**
   * Ширина поля в клетках
   * minimum: 1
   * @return width
   */
  @javax.annotation.Nonnull

  public Integer getWidth() {
    return width;
  }


  public void setWidth(@javax.annotation.Nonnull Integer width) {
    this.width = width;
  }

  public GameMapSettingsDto height(@javax.annotation.Nonnull Integer height) {
    
    this.height = height;
    return this;
  }

  /**
   * Высота поля в клетках
   * minimum: 1
   * @return height
   */
  @javax.annotation.Nonnull

  public Integer getHeight() {
    return height;
  }


  public void setHeight(@javax.annotation.Nonnull Integer height) {
    this.height = height;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameMapSettingsDto gameMapSettingsDto = (GameMapSettingsDto) o;
    return Objects.equals(this.width, gameMapSettingsDto.width) &&
        Objects.equals(this.height, gameMapSettingsDto.height);
  }

  @Override
  public int hashCode() {
    return Objects.hash(width, height);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameMapSettingsDto {\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private GameMapSettingsDto instance;

    public Builder() {
      this(new GameMapSettingsDto());
    }

    protected Builder(GameMapSettingsDto instance) {
      this.instance = instance;
    }

    public GameMapSettingsDto.Builder width(Integer width) {
      this.instance.width = width;
      return this;
    }
    public GameMapSettingsDto.Builder height(Integer height) {
      this.instance.height = height;
      return this;
    }


    /**
    * returns a built GameMapSettingsDto instance.
    *
    * The builder is not reusable.
    */
    public GameMapSettingsDto build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static GameMapSettingsDto.Builder builder() {
    return new GameMapSettingsDto.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public GameMapSettingsDto.Builder toBuilder() {
    return new GameMapSettingsDto.Builder()
      .width(getWidth())
      .height(getHeight());
  }


}

